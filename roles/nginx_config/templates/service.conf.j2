server {
  listen       {{ nginx_listen_port }};
  server_name  tayutayura.com;
  root   /var/www/{{ item.name }}/public;
  index  index.php index.html;
  port_in_redirect off;

  access_log  /var/log/nginx/{{ item.name }}/access.log main;
  error_log  /var/log/nginx/{{ item.name }}/error.log;

  fastcgi_buffers 8 16k;
  fastcgi_buffer_size 32k;

  location / {
    #if ($http_x_forwarded_proto != https) {
    #  return 301 https://$host$request_uri;
    #}

    if ( !-e $request_filename ){
        rewrite ^/(.*)$ /index.php?$1 last;
    }

    {% if nginx_env != 'production' %}
    auth_basic "...";
    auth_basic_user_file /etc/nginx/.htpasswd;
    {% endif %}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ \.php$ {
        try_files $uri $uri/ /index.php?$query_string;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
           return 404;
        }
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param  CAKEPHP_ENV {{ nginx_env }};
        include        fastcgi_params;
    }

    location ~ .*\.(jpg|jpeg|JPG|gif|png|css|js|ico|woff) {
        access_log off;
        expires 7d;
    }

    # redirect server error pages to the static page /40x.html
    #
    error_page 404 /404.html;
        location = /40x.html {
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
  }
}

# # Settings for a TLS enabled server.
# server {
#     listen       443 ssl;
#     server_name tayutayura.com;
#     ssl_certificate "/etc/pki/nginx/server.crt";
#     ssl_certificate_key "/etc/pki/nginx/private/server.key";
#
#     location / {
#         proxy_pass http://127.0.0.1:80;
#         proxy_set_header X-Real-IP  $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto https;
#         proxy_set_header X-Forwarded-Port 443;
#         proxy_set_header Host $host;
#     }
# }
